#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void push(struct Node** top, int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (!newNode) {
        printf("Heap overflow\n");
        return;
    }
    newNode->data = value;
    newNode->next = *top;
    *top = newNode;
    printf("%d pushed to stack\n", value);
}

int pop(struct Node** top) {
    if (*top == NULL) {
        printf("Stack Underflow\n");
        return -1;
    }
    struct Node* temp = *top;
    int poppedValue = temp->data;
    *top = (*top)->next;
    free(temp);
    printf("Popped element: %d\n", poppedValue);
    return poppedValue;
}

int peek(struct Node* top) {
    if (top == NULL) {
        printf("Stack is empty\n");
        return -1;
    }
    return top->data;
}

int main() {
    struct Node* stack = NULL;
    int choice, value;

    while(1) {
        printf("Choose an operation:\n1. Push\n2. Pop\n3. Peek\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch(choice) {
            case 1: 
                printf("Enter value to be pushed: ");
                scanf("%d", &value);
                push(&stack, value);
                break;

            case 2: 
                pop(&stack);
                break;

            case 3:
                value = peek(stack);
                if (value != -1) {
                    printf("Top element is %d\n", value);
                }
                break;

            case 4: 
                exit(0);

            default:
                printf("Invalid choice\n");
        }
    }

    return 0;
}
