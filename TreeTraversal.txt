#include <stdio.h> 
#include <stdlib.h> 

struct Node { 
    int data; 
    struct Node* left; 
    struct Node* right; 
}; 

struct Node* createNode(int data) { 
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node)); 
    newNode->data = data; 
    newNode->left = newNode->right = NULL; 
    return newNode; 
} 

struct Node* insert(struct Node* node, int data) { 
    if (node == NULL) 
        return createNode(data); 
    if (data < node->data) 
        node->left = insert(node->left, data); 
    else 
        node->right = insert(node->right, data); 
    return node; 
} 

void preorder(struct Node* node) { 
    if (node == NULL) 
        return; 
    printf("%d ", node->data); 
    preorder(node->left); 
    preorder(node->right); 
} 

void inorder(struct Node* node) { 
    if (node == NULL) 
        return; 
    inorder(node->left); 
    printf("%d ", node->data); 
    inorder(node->right); 
}

void postorder(struct Node* node) { 
    if (node == NULL) 
        return; 
    postorder(node->left); 
    postorder(node->right); 
    printf("%d ", node->data); 
} 

int main() { 
    struct Node* root = NULL; 
    int n, data; 

    printf("Enter the number of nodes: "); 
    scanf("%d", &n); 
    
    printf("Enter the values:\n"); 
    for (int i = 0; i < n; i++) { 
        scanf("%d", &data); 
        root = insert(root, data); 
    } 
    
    printf("Preorder traversal: "); 
    preorder(root); 
    printf("\n"); 
    
    printf("Inorder traversal: "); 
    inorder(root); 
    printf("\n"); 
    
    printf("Postorder traversal: "); 
    postorder(root); 
    printf("\n"); 
    
    return 0; 
}
